add_library(Graphics STATIC
aabb.h
aabb.cpp
camera.cpp
camera.h
common.h
opengl/elementBuffer.cpp
opengl/elementBuffer.h
opengl/framebuffer.cpp
opengl/framebuffer.h
material.cpp
material.h
opengl/device.cpp
opengl/device.h
opengl/shader.cpp
opengl/shader.h
opengl/shaderProgram.cpp
opengl/shaderProgram.h
staticMesh.cpp
staticMesh.h
renderPass.h
lights.h
deferredLights.h
scene.h
scene.cpp
sceneLoader.h
sceneLoader.cpp
renderPass.cpp
renderer.h
renderer.cpp
opengl/texture.cpp
opengl/texture.h
opengl/uniformBuffer.cpp
opengl/uniformBuffer.h
vertexArrayLayout.cpp
vertexArrayLayout.h
opengl/vertexBuffer.cpp
opengl/vertexBuffer.h
window.cpp
window.h
commandBuffer.cpp
commandBuffer.h)

target_include_directories(Graphics PUBLIC
${CMAKE_SOURCE_DIR}/dankerer
${CMAKE_SOURCE_DIR}/dankerer/gfx
${CMAKE_SOURCE_DIR}/dankerer/gfx/opengl
${CMAKE_SOURCE_DIR}/third_party/glm
${CMAKE_SOURCE_DIR}/third_party/assimp/include
${CMAKE_SOURCE_DIR}/third_party/rapidjson/include
${CMAKE_SOURCE_DIR}/third_party/glfw/include
${GLEW_INCLUDE_DIRS}
${Boost_INCLUDE_DIRS}
${OPENGL_INCLUDE_DIR}
)

target_link_libraries(Graphics 
glfw
${GLEW_LIBRARIES} 
Boost::filesystem
assimp
OpenGL::GL)